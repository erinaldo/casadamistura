<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
     ViewBag.Title = "Detalhes <#= ViewDataTypeShortName #>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}
<h1 class="brand-name"> @ViewBag.Title</h1>
<hr class="tagline-divider">
<p>
    @Html.Raw(@Html.ActionLink("[icon]Listagem", "", null, new {  }, new { @class = "btn btn-default" }).ToHtmlString().Replace("[icon]", "<i class='fa fa-list-alt'></i>&ensp;"))
</p>
<hr />

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="row">
    <div class="col-md-10">
        <markremove>
        @{
        var partial = @"
        @model <#= ViewDataTypeName #>
        <!-- START PARTIAL _DETAILS -->
			<table class=""table table-bordered table-condensed table-hover table-responsive table-striped"">
				<tbody>
					<#
					foreach (PropertyMetadata property in ModelMetadata.Properties) {
						if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
					#>
					<#
							// We do not want to show any association properties for which there is
							// no associated foreign key.
							if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
								continue;
							}
					#>
							<tr>
								<th>
									@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
								</th>
								<td>
									@Html.DisplayFor(model => model.<#= GetValueExpression(property) #>)
								</td>
							</tr>

					<#
						}
					}
					#>
				</tbody>
			</table>
		<!-- END PARTIAL _DETAILS --> ";
if (HttpContext.Current != null)
        {
        string path = HttpContext.Current.Server.MapPath(this.VirtualPath);
        path = path.Replace(System.IO.Path.GetFileName(path), "_" + System.IO.Path.GetFileName(path));

        FileStream fs = null;
        StreamWriter sw = null;
        if (!File.Exists(path))
        {
        fs = new FileStream(path, FileMode.OpenOrCreate, FileAccess.Write, FileShare.ReadWrite);
        sw = new StreamWriter(fs,System.Text.Encoding.UTF8);
        sw.Write(partial);
        sw.Close();
        sw.Dispose();
        fs.Close();
        fs.Dispose();
        }
        path = path.Replace(System.IO.Path.GetFileName(path), System.IO.Path.GetFileName(path).Replace("_", ""));

            string removeMarkers = File.ReadAllText(path);
            var regex = new System.Text.RegularExpressions.Regex(@"<markremove>[\s\S]*?<\/markremove>");
            removeMarkers = regex.Replace(removeMarkers, "");
            File.Delete(path);
            fs = new FileStream(path, FileMode.CreateNew, FileAccess.Write, FileShare.ReadWrite);
            sw = new StreamWriter(fs,System.Text.Encoding.UTF8);    
            sw.Write(removeMarkers);
            sw.Close();
            sw.Dispose();
            fs.Close();
            fs.Dispose();
        }
        }
        </markremove>
		@Html.Partial("_Details", Model)
    </div>
</div>

<p>
<#
string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
	@Html.Raw(@Html.ActionLink("[icon]Editar", "Edit", null, new { id = Model.Id }, new { @class = "btn btn-primary" }).ToHtmlString().Replace("[icon]", "<i class='fa fa-pencil'></i>&ensp;"))
<#
} else {
#>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    @Html.ActionLink("Back to List", "Index")
<#
}
#>
</p>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>