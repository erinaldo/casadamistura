@model PdvStock.Models.Pdv

@{
    ViewBag.Title = "Editar Pdv";
}

<h1 class="brand-name"> @ViewBag.Title</h1>
<hr class="tagline-divider">
<p>
    @Html.Raw(@Html.ActionLink("[icon]Listagem", "Index", null, null, new { @class = "btn btn-default" }).ToHtmlString().Replace("[icon]", "<i class='fa fa-arrow-left'></i>&ensp;"))
</p>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ClientesId, "ClientesId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClientesId", null, @Resources.Resource.ChosenSelectOne ,htmlAttributes: new { @class = "form-control chosen" })
                @Html.ValidationMessageFor(model => model.ClientesId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroVenda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroVenda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataVenda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
			
				@Html.EditorFor(model => model.DataVenda, new { htmlAttributes = new { @class = "form-control DatePickerAttr" } })
                @Html.ValidationMessageFor(model => model.DataVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-save"></i>&ensp;
                    @Resources.Resource.Atualizar
                </button>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
